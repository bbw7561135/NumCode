// 防止头文件被重复引用 应当用 ifndef define endif结构产生预处理块
// 用#include<XX.h>格式来引用头文件 编译器将从标准库目录开始引用
// 用#include "XX.h"格式来引用头文件 编译器将从用户的工作目录开始搜索
// 头文件中只存放声明 而不存放定义（也叫做实现 implementation）
// C++语法中 类的成员函数可以在声明时候就给出定义 编译器自动视其为内联函数 但不建议那么做 声明就是声明 定义就是定义 要分开
// 不提倡使用全局变量 尽量不要在头文件中出现extern int value这类声明

//头文件结构示例 .h

//版权和版本声明

#ifndef XX_H //防止重复定义
#define XX_H

#include <math.h> //标准库文件

#include "myheader.h" //非标准库文件

void Function(); //全局函数声明

class Box
{

}; //类声明

#endif

//定义文件的结构示例 .cpp

//版本和版权声明

#include "XX.h" //引用头文件

//全局函数的定义或实现
void Funtion()
{

}

//类成员函数的实现体

void Box::Draw(...)
{

}


//头文件用来调用库功能 同时可以加强类型安全检查 总之是好的

//目录结构 大型程序 头文件专门放在include目录 定义文件放在source目录 并且可以是多级目录

//每个类声明之后 每个函数定义结束之后都加空行

//在某个函数体内 逻辑上密切相关的语句之间不加空行 其他地方应该加空行分隔 但是编程每个人都有自己的style不强求 清晰明白就行

//一行代码最好只做一件事 如只定义一个变量或只写一条语句 代码容易阅读 方便写注释

//
